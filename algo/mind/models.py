# 人工智能，顾名思义就是模仿人的方式去思考， 思考的方式就是学习，学习就是通过经验去 accumulate knowledge，然后通过知识去推理，推理就是通过知识去解决问题，
# 解决问题就是通过知识去做决策，做决策就是通过知识去做预测，预测就是通过知识去做规划，规划就是通过知识去做控制，控制就是通过知识去做优化，优化就是通过知识去做创新，
# 创新就是通过知识去做创造，创造就是通过知识去做发展，发展就是通过知识去做进步，进步就是通过知识去做改变，改变就是通过知识去做适应，适应就是通过知识去做生存，生存就是通过知识去做繁衍，
# 繁衍就是通过知识去做演化，演化就是通过知识去做进化，进化就是通过知识去做智能，智能就是通过知识去做人工，人工就是通过知识去做机器，机器就是通过知识去做工具，
# 工具就是通过知识去做助手，助手就是通过知识去做伙伴，伙伴就是通过知识去做朋友，朋友就是通过知识去做家人，家人就是通过知识去做社会，社会就是通过知识去做文明，
# 文明就是通过知识去做和谐，和谐就是通过知识去做平衡，平衡就是通过知识去做生态，生态就是通过知识去做环境，环境就是通过知识去做地球，地球就是通过知识去做
class Human:
    """
    人类
    """

    def __init__(self, name):
        self.name = name

    def problem_library(self):
        """
        问题库
        问题库是一个知识库，里面存放了各种问题的解决方案
        """
        pass

    def define_problem(self, question_object):
        """
        定义问题
        定义问题需要用到问题库
        如果知识库里面没有，则触发学习动作
        """
        pass

    def want(self, question_object):
        """
        想要
        想要需要用到问题库
        如果知识库里面没有，则触发学习动作
        """
        pass

    def think(self, question_object):
        """
        思考
        思考需要用到问题库
        如果知识库里面没有，则触发学习动作
        """
        pass

    def solve(self, question_object):
        """
        解决
        解决需要用到问题库
        如果知识库里面没有，则触发学习动作
        """
        pass

    def learn(self, question_object):
        """
        学习
        学习需要用到问题库
        如果知识库里面没有，则触发学习动作
        """
        pass

    def act(self, question_object):
        """
        行动
        行动需要用到问题库
        如果知识库里面没有，则触发学习动作
        """
        pass

    def communicate(self, question_object):
        """
        沟通
        沟通需要用到问题库
        如果知识库里面没有，则触发学习动作
        """
        pass

    def share(self, question_object):
        """
        分享
        分享需要用到问题库
        如果知识库里面没有，则触发学习动作
        """
        pass
